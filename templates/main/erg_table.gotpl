// Generated by sqlboiler-erg: DO NOT EDIT.
package {{ergPkgName}}

import (
{{ range $v := .Imports }}
    "{{ . }}"
{{- end }}
)


type {{ .Name.PascalCase }} struct {
    {{ if isInline }}
    *{{sqlboilerPkgName}}.{{ .Name.PascalCase }}
    {{- else}}
    {{- range $column := .Columns }}
            {{ .Name.PascalCase }} {{ .Type.FormattedName }} `json:"{{getStructTag .Name "json"}}{{shouldOmit .Type ",omitempty"}}" toml:"{{ getStructTag .Name "toml" }}" yaml:"{{  getStructTag .Name "yaml"}}"`
    {{- end }}
    {{- end }}


    {{ range $relation := .Relations }}
        {{ .Name.PascalCase }} {{ .Type.FormattedName }} `json:"{{ getStructTag .Name "json" }},omitempty" toml:"{{ getStructTag .Name "toml" }}" yaml:"{{ getStructTag .Name "yaml"}}"`
    {{- end }}
}

type {{.Name.PascalCase}}Slice []*{{.Name.PascalCase}}

func To{{pluralize .Name.PascalCase}}(a {{sqlboilerPkgName}}.{{ singularize .Name.PascalCase }}Slice, exclude ...string) {{ .Name.PascalCase }}Slice {
	s := make({{ .Name.PascalCase }}Slice, len(a))
	for i, d := range a {
		s[i] = To{{singularize .Name.PascalCase}}(d, exclude...)
	}
	return s
}

func To{{singularize .Name.PascalCase }}(a *{{sqlboilerPkgName}}.{{singularize .Name.PascalCase }}, exclude ...string) *{{ .Name.PascalCase }} {
    p := {{ .Name.PascalCase }}{
        {{- if isInline}}
        {{.Name.PascalCase}}: a,
        {{- else}}
        {{- range $column := .Columns }}
            {{ .Name.PascalCase }}: {{ convertSQLBoilerToErgType .Type "a" .Name.PascalCase }},
        {{- end}}
        {{- end}}
    }

    {{ $snakeCaseName := .Name.SnakeCase }}
    {{ $hasRelations := gt (len .Relations) 0}}
    {{- if $hasRelations }} if a.R != nil { {{- end }}
        {{- range $relation := .Relations }}
            if a.R.{{ .Name.PascalCase }} != nil && doesNotContain(exclude,"{{ $snakeCaseName}}.{{ singularize .MainTableName.SnakeCase }}") {
                p.{{ .Name.PascalCase }} = To{{if .IsMany }}{{ pluralize .MainTableName.PascalCase }}{{- else}}{{singularize .MainTableName.PascalCase }}{{- end}}(a.R.{{ .Name.PascalCase }}, append(exclude, "{{ singularize .MainTableName.SnakeCase}}.{{ $snakeCaseName }}")...)
            }
        {{- end }}
    {{- if $hasRelations }} } {{- end }}

    return &p
}

